<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='style.css')}}"/>
</head>
<body class="show-chatbot">

    <button class="chatbot-toggler">
        <span class="message"><img src="static/images/message.png"></span>
        <span class="cross"><img src="static/images/cross.png"></span>

    </button>

    <div class="chatbot">

        <header>
            <h2>Chatbot</h2>
        </header>

        <ul class="chatbox">
            <li class="chat incoming">
                <span class="robot"><img src="static/images/robot.jpg"></span>
                <p>Hi there ðŸ‘‹ <br> How can I help you today?</p>
            </li>

        </ul>

        <div class="chat-input">
            <textarea placeholder="Enter a message..." required></textarea>
            <span id="send-btn" class="send">âž¤</span>
        </div>

    </div>

<script>
    const chatInput = document.querySelector(".chat-input textarea");
    const sendChatBtn = document.querySelector(".chat-input span");
    const chatbox = document.querySelector(".chatbox");

    let userMessage;
    const API_KEY = "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"

    const createChatLi = (message, className) => {
        // create a chat <li> element with passed message and className
        const chatLi = document.createElement("li");
        chatLi.classList.add("chat", className);
        let chatContent = className === "outgoing" ? `<p>${message}</p>` : `<span class="robot"><img src="static/images/robot.jpg"></span><p>${message}</p>`;
        chatLi.innerHTML = chatContent;
        return chatLi;
    }

    const generateResponse = (incomingChatLi) => {
        const API_URL = "https://api.openai.com/v1/chat/completions";
        const messageElement = incomingChatLi.querySelector("p");

        const requestOptions = {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": 'Bearer ${API_KEY}'
            },
            body: JSON.stringify({
                model: "gpt-3.5-turbo",
                messages: [{role: "user", content: userMessage}]
            })
        }

        // send POST request to API, get response
        fetch(API_URL, requestOptions).then(res => res.json()).then(data => {
            messageElement.textContent = data.choices[0].message.content;
        }).catch((error) => {
            messageElement.textContent = "Oops! Something went wrong. Please try again.";
        })
    }

    const handleChat = () => {
        userMessage = chatInput.value.trim();
        if (!userMessage) return;

        // Append the user's message to the chatbox
        chatbox.appendChild(createChatLi(userMessage, "outgoing"));

        setTimeout(() => {
            // Display "Thinking..." message while waiting for the response
            const incomingChatLi = createChatLi("Thinking...", "incoming")
            chatbox.appendChild(incomingChatLi);
            generateResponse(incomingChatLi);
        }, 600);
    }

    sendChatBtn.addEventListener("click", handleChat);
</script>


</body>
</html>
